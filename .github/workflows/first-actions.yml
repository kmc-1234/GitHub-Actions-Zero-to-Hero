name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get the latest tag
      id: get-latest-tag
      run: |
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)
        echo "Latest tag: $latest_tag"
        echo "::set-output name=latest-tag::$latest_tag"

    - name: Increment version
      id: increment-version
      run: |
        latest_tag=${{ steps.get-latest-tag.outputs.latest-tag }}
        if [[ -z "$latest_tag" ]]; then
          new_version="1.0.0"
        else
          IFS='.' read -r -a parts <<< "$latest_tag"
          major=${parts[0]}
          minor=${parts[1]}
          patch=${parts[2]}
          new_patch=$((patch + 1))
          new_version="${major}.${minor}.${new_patch}"
        fi
        echo "New version: $new_version"
        echo "::set-output name=new-version::$new_version"

    - name: Build Docker image
      run: |
        new_version=${{ steps.increment-version.outputs.new-version }}
        docker build -t kmc173/sample_github_actions:$new_version .

    - name: Push Docker image
      run: |
        new_version=${{ steps.increment-version.outputs.new-version }}
        docker push kmc173/sample_github_actions:$new_version

    - name: Tag the new version
      run: |
        new_version=${{ steps.increment-version.outputs.new-version }}
        git tag $new_version
        git push origin $new_version
